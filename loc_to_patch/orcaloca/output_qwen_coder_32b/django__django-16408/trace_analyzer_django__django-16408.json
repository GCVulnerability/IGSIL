{
    "summary": "",
    "suspicious_code": [
        {
            "keyword": "FilteredRelation",
            "file_path": ""
        },
        {
            "keyword": "test_wrong_select_related",
            "file_path": ""
        },
        {
            "keyword": "PoolStyle",
            "file_path": "tests/known_related_objects/models.py"
        },
        {
            "keyword": "TestCase",
            "file_path": ""
        },
        {
            "keyword": "ExistingRelatedInstancesTests",
            "file_path": ""
        },
        {
            "keyword": "Tournament",
            "file_path": "tests/known_related_objects/models.py"
        }
    ],
    "suspicious_code_from_tracer": [],
    "related_source_code": "",
    "is_reproduce_pass": false,
    "reproduce_code": "from django.test import TestCase\nfrom django.db.models import FilteredRelation\nfrom django__django.tests.known_related_objects.models import PoolStyle, Tournament\n\nclass ExistingRelatedInstancesTests(TestCase):\n    def test_wrong_select_related(self):\n        with self.assertNumQueries(3):\n            p = list(PoolStyle.objects.annotate(\n                tournament_pool=FilteredRelation('pool__tournament__pool'),\n            ).select_related('tournament_pool'))\n            self.assertEqual(p[0].pool.tournament, p[0].tournament_pool.tournament)",
    "env_reproduce_path": "/django__django/reproducer_django__django-16408.py"
}