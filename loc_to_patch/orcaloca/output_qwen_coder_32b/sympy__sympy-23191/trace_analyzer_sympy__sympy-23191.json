{
    "summary": "",
    "suspicious_code": [
        {
            "keyword": "cos",
            "file_path": "sympy/functions/elementary/trigonometric.py"
        },
        {
            "keyword": "CoordSys3D",
            "file_path": "sympy/vector/coordsysrect.py"
        },
        {
            "keyword": "Del",
            "file_path": "sympy/vector/deloperator.py"
        },
        {
            "keyword": "pi",
            "file_path": "sympy/core/numbers.py"
        },
        {
            "keyword": "sin",
            "file_path": ""
        },
        {
            "keyword": "Integral",
            "file_path": "sympy/integrals/integrals.py"
        },
        {
            "keyword": "sin",
            "file_path": "sympy/functions/elementary/trigonometric.py"
        },
        {
            "keyword": "symbols",
            "file_path": "sympy/core/symbol.py"
        },
        {
            "keyword": "pprint",
            "file_path": "sympy/printing/pretty/pretty.py"
        },
        {
            "keyword": "cos",
            "file_path": ""
        },
        {
            "keyword": "integrate",
            "file_path": ""
        }
    ],
    "suspicious_code_from_tracer": [
        {
            "keyword": "doit",
            "file_path": "sympy/integrals/integrals.py",
            "class_name": "Integral"
        }
    ],
    "related_source_code": "",
    "is_reproduce_pass": true,
    "reproduce_code": "\nfrom sympy import *\nfrom sympy.vector import CoordSys3D, Del\n\ninit_printing()\n\ndelop = Del()\nCC_ = CoordSys3D(\"C\")\nx,    y,    z    = CC_.x, CC_.y, CC_.z\nxhat, yhat, zhat = CC_.i, CC_.j, CC_.k\n\nt = symbols(\"t\")\nten = symbols(\"10\", positive=True)\neps, mu = 4*pi*ten**(-11), ten**(-5)\n\nBx = 2 * ten**(-4) * cos(ten**5 * t) * sin(ten**(-3) * y)\nvecB = Bx * xhat\nvecE = (1/eps) * Integral(delop.cross(vecB/mu).doit(), t)\n\npprint(vecB)\nprint()\npprint(vecE)\nprint()\npprint(vecE.doit())\n",
    "env_reproduce_path": "/sympy__sympy/reproducer_sympy__sympy-23191.py"
}